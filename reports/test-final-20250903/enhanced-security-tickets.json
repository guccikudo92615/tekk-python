[
  {
    "title": "[Critical] Missing Authentication Mechanism",
    "description": "## Security Issue: Missing Authentication Mechanism\n\n**Why this is a problem:** Unauthorized access to application resources.\n\n**Evidence:** No authentication implementation found in src/App.tsx\n\n**Location:** src/App.tsx\n\n**Why it should be fixed:** This is a Critical severity issue with High likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0, OWASP Top 10 A01:2021, CWE-306.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Authentication Mechanism in this AuthZ application.\n\n**Problem:** Unauthorized access to application resources.\n\n**Security Control:** AuthN\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** AuthN\n**Category:** AuthZ\n**Confidence:** High\n\n**Manual Fix Steps:**\n1. Implement an authentication mechanism using OAuth or JWT.\n2. Ensure all routes are protected.\n\n**Secure Example:**\n```\nUse Passport.js for authentication.\n```\n\n**Notes:** Needs verification",
    "labels": [
      "security",
      "tekk",
      "category:AuthZ",
      "control:AuthN",
      "severity:Critical",
      "type:MissingControl"
    ],
    "priority": "P1",
    "source_finding_id": "SEC-001"
  },
  {
    "title": "[High] Hardcoded API Keys",
    "description": "## Security Issue: Hardcoded API Keys\n\n**Why this is a problem:** Exposure of sensitive API keys can lead to unauthorized access.\n\n**Evidence:** const openAIKey = Deno.env.get('OPENAI_API_KEY');\n\n**Location:** supabase/functions/world-seeding/index.ts:35\n\n**Why it should be fixed:** This is a High severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0, OWASP Top 10 A02:2021, CWE-798.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Hardcoded API Keys in this Secrets application.\n\n**Problem:** Exposure of sensitive API keys can lead to unauthorized access.\n\n**Security Control:** Secrets\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** Issue\n**Control:** Secrets\n**Category:** Secrets\n**Confidence:** High\n\n**Manual Fix Steps:**\n1. Use environment variables to store API keys securely.\n2. Implement key rotation policies.\n\n**Secure Example:**\n```\nStore keys in a secure vault like AWS Secrets Manager.\n```\n\n**Notes:** Ensure all API keys are rotated regularly.",
    "labels": [
      "security",
      "tekk",
      "category:Secrets",
      "control:Secrets",
      "severity:High",
      "type:Issue"
    ],
    "priority": "P2",
    "source_finding_id": "SEC-002"
  },
  {
    "title": "[High] CORS Misconfiguration",
    "description": "## Security Issue: CORS Misconfiguration\n\n**Why this is a problem:** Allows any domain to access the API, increasing the risk of CSRF attacks.\n\n**Evidence:** 'Access-Control-Allow-Origin': '*'\n\n**Location:** supabase/functions/world-seeding/index.ts:8\n\n**Why it should be fixed:** This is a High severity issue with High likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0, OWASP Top 10 A05:2021, CWE-942.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix CORS Misconfiguration in this CORS application.\n\n**Problem:** Allows any domain to access the API, increasing the risk of CSRF attacks.\n\n**Security Control:** Headers\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** Issue\n**Control:** Headers\n**Category:** CORS\n**Confidence:** High\n\n**Manual Fix Steps:**\n1. Restrict CORS to trusted domains.\n2. Implement CSRF protection.\n\n**Secure Example:**\n```\n'Access-Control-Allow-Origin': 'https://trusted.domain'\n```\n\n**Notes:** Review CORS policy for all endpoints.",
    "labels": [
      "security",
      "tekk",
      "category:CORS",
      "control:Headers",
      "severity:High",
      "type:Issue"
    ],
    "priority": "P2",
    "source_finding_id": "SEC-003"
  },
  {
    "title": "[Medium] Missing Security Headers",
    "description": "## Security Issue: Missing Security Headers\n\n**Why this is a problem:** Increased risk of XSS and clickjacking attacks.\n\n**Evidence:** No security headers configuration found in vite.config.ts\n\n**Location:** vite.config.ts\n\n**Why it should be fixed:** This is a Medium severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0, OWASP Top 10 A06:2021, CWE-693.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Security Headers in this Headers application.\n\n**Problem:** Increased risk of XSS and clickjacking attacks.\n\n**Security Control:** Headers\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** Headers\n**Category:** Headers\n**Confidence:** Medium\n\n**Manual Fix Steps:**\n1. Add security headers like CSP, HSTS, and X-Frame-Options.\n\n**Secure Example:**\n```\nUse helmet.js to set security headers.\n```\n\n**Notes:** Consider using a library like Helmet for Express.js.",
    "labels": [
      "security",
      "tekk",
      "category:Headers",
      "control:Headers",
      "severity:Medium",
      "type:MissingControl"
    ],
    "priority": "P3",
    "source_finding_id": "SEC-004"
  },
  {
    "title": "[Low] Lack of Audit Logging",
    "description": "## Security Issue: Lack of Audit Logging\n\n**Why this is a problem:** Inability to track and respond to security incidents.\n\n**Evidence:** No audit logging implementation found in src/App.tsx\n\n**Location:** src/App.tsx\n\n**Why it should be fixed:** This is a Low severity issue with Low likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0, OWASP Top 10 A09:2021, CWE-778.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Lack of Audit Logging in this Logging application.\n\n**Problem:** Inability to track and respond to security incidents.\n\n**Security Control:** Logging\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** Logging\n**Category:** Logging\n**Confidence:** Low\n\n**Manual Fix Steps:**\n1. Implement audit logging for critical actions.\n2. Ensure logs are stored securely.\n\n**Secure Example:**\n```\nUse Winston or Bunyan for logging.\n```\n\n**Notes:** Needs verification",
    "labels": [
      "security",
      "tekk",
      "category:Logging",
      "control:Logging",
      "severity:Low",
      "type:MissingControl"
    ],
    "priority": "P4",
    "source_finding_id": "SEC-005"
  },
  {
    "title": "[Medium] Missing Authentication",
    "description": "## Security Issue: Missing Authentication\n\n**Why this is a problem:** Application lacks authentication which is a fundamental security control\n\n**Evidence:** No authentication implementation found in No relevant files found\n\n**Location:** No relevant files found\n\n**Why it should be fixed:** This is a Medium severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Authentication in this AuthZ application.\n\n**Problem:** Application lacks authentication which is a fundamental security control\n\n**Security Control:** AuthN\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** AuthN\n**Category:** AuthZ\n**Confidence:** Low\n\n**Manual Fix Steps:**\n1. Implement authentication framework\n2. Configure appropriate policies\n3. Test implementation thoroughly\n\n**Secure Example:**\n```\n// Implement authentication here\n```\n\n**Notes:** Needs verification - structural analysis only",
    "labels": [
      "security",
      "tekk",
      "category:AuthZ",
      "control:AuthN",
      "severity:Medium",
      "type:MissingControl"
    ],
    "priority": "P3",
    "source_finding_id": "SEC-001"
  },
  {
    "title": "[Medium] Missing Authorization",
    "description": "## Security Issue: Missing Authorization\n\n**Why this is a problem:** Application lacks authorization which is a fundamental security control\n\n**Evidence:** No authorization framework found in No relevant files found\n\n**Location:** No relevant files found\n\n**Why it should be fixed:** This is a Medium severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Authorization in this AuthZ application.\n\n**Problem:** Application lacks authorization which is a fundamental security control\n\n**Security Control:** AuthZ\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** AuthZ\n**Category:** AuthZ\n**Confidence:** Low\n\n**Manual Fix Steps:**\n1. Implement authorization framework\n2. Configure appropriate policies\n3. Test implementation thoroughly\n\n**Secure Example:**\n```\n// Implement authorization here\n```\n\n**Notes:** Needs verification - structural analysis only",
    "labels": [
      "security",
      "tekk",
      "category:AuthZ",
      "control:AuthZ",
      "severity:Medium",
      "type:MissingControl"
    ],
    "priority": "P3",
    "source_finding_id": "SEC-001"
  },
  {
    "title": "[Medium] Missing Rate Limiting",
    "description": "## Security Issue: Missing Rate Limiting\n\n**Why this is a problem:** Application lacks rate limiting which is a fundamental security control\n\n**Evidence:** No rate limiting implementation found in No relevant files found\n\n**Location:** No relevant files found\n\n**Why it should be fixed:** This is a Medium severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Rate Limiting in this Other application.\n\n**Problem:** Application lacks rate limiting which is a fundamental security control\n\n**Security Control:** RateLimiting\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** RateLimiting\n**Category:** Other\n**Confidence:** Low\n\n**Manual Fix Steps:**\n1. Implement rate limiting framework\n2. Configure appropriate policies\n3. Test implementation thoroughly\n\n**Secure Example:**\n```\n// Implement rate limiting here\n```\n\n**Notes:** Needs verification - structural analysis only",
    "labels": [
      "security",
      "tekk",
      "category:Other",
      "control:RateLimiting",
      "severity:Medium",
      "type:MissingControl"
    ],
    "priority": "P3",
    "source_finding_id": "SEC-001"
  },
  {
    "title": "[Medium] Missing Security Headers",
    "description": "## Security Issue: Missing Security Headers\n\n**Why this is a problem:** Application lacks security headers which is a fundamental security control\n\n**Evidence:** No security headers configuration found in tsconfig.node.json, tsconfig.app.json, tailwind.config.ts\n\n**Location:** tsconfig.node.json, tsconfig.app.json, tailwind.config.ts\n\n**Why it should be fixed:** This is a Medium severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Security Headers in this Headers application.\n\n**Problem:** Application lacks security headers which is a fundamental security control\n\n**Security Control:** Headers\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** Headers\n**Category:** Headers\n**Confidence:** Low\n\n**Manual Fix Steps:**\n1. Implement security headers framework\n2. Configure appropriate policies\n3. Test implementation thoroughly\n\n**Secure Example:**\n```\n// Implement security headers here\n```\n\n**Notes:** Needs verification - structural analysis only",
    "labels": [
      "security",
      "tekk",
      "category:Headers",
      "control:Headers",
      "severity:Medium",
      "type:MissingControl"
    ],
    "priority": "P3",
    "source_finding_id": "SEC-012"
  },
  {
    "title": "[Medium] Missing Audit Logging",
    "description": "## Security Issue: Missing Audit Logging\n\n**Why this is a problem:** Application lacks audit logging which is a fundamental security control\n\n**Evidence:** No audit logging implementation found in src/components/WorldSeedingDialog.tsx, src/components/ui/alert-dialog.tsx, src/components/ui/dialog.tsx\n\n**Location:** src/components/WorldSeedingDialog.tsx, src/components/ui/alert-dialog.tsx, src/components/ui/dialog.tsx\n\n**Why it should be fixed:** This is a Medium severity issue with Medium likelihood of exploitation. \nIt violates security standards: OWASP-ASVS V4.0.\n\n## LLM Fix Instruction\n\nCopy and paste this instruction to an LLM to get specific fix guidance:\n\n```\nYour task is to fix Missing Audit Logging in this Logging application.\n\n**Problem:** Application lacks audit logging which is a fundamental security control\n\n**Security Control:** Logging\n\n**What you need to do:**\n1. Identify the specific code causing this issue\n2. Implement a secure solution following best practices\n3. Ensure the fix doesn't break existing functionality\n4. Add appropriate error handling and validation\n5. Test the implementation\n\n**Requirements:**\n- Follow OWASP security guidelines\n- Use secure coding practices\n- Provide working code examples\n- Explain the security improvement\n- Consider edge cases and error scenarios\n\nPlease provide a complete, production-ready solution with explanations.\n```\n\n## Technical Details\n\n**Type:** MissingControl\n**Control:** Logging\n**Category:** Logging\n**Confidence:** Low\n\n**Manual Fix Steps:**\n1. Implement audit logging framework\n2. Configure appropriate policies\n3. Test implementation thoroughly\n\n**Secure Example:**\n```\n// Implement audit logging here\n```\n\n**Notes:** Needs verification - structural analysis only",
    "labels": [
      "security",
      "tekk",
      "category:Logging",
      "control:Logging",
      "severity:Medium",
      "type:MissingControl"
    ],
    "priority": "P3",
    "source_finding_id": "SEC-004"
  }
]